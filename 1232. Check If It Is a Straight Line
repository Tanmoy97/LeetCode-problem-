You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.

Example 1:




Input: coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]
Output: true
Example 2:



Input: coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]
Output: false
 
Constraints:

2 <= coordinates.length <= 1000
coordinates[i].length == 2
-10^4 <= coordinates[i][0], coordinates[i][1] <= 10^4
coordinates contains no duplicate point.

Hint:
1. If there're only 2 points, return true.
2.Check if all other points lie on the line defined by the first 2 points.
3.Use cross product to check collinearity.

Solution:

class Solution {
public:
    bool checkStraightLine(vector<vector<int>>& coordinates) {
        int size = coordinates.size();
        int x1 = coordinates[0][0],y1 = coordinates[0][1];
        int x2 = coordinates[size-1][0],y2 = coordinates[size-1][1];
        int dx = x2-x1;
        int dy = y2-y1;
        for (int i = 0;i<size;i++){
            int ddx = coordinates[i][0] - coordinates[0][0];
            int ddy = coordinates[i][1] - coordinates[0][1];
            if(ddx*dy != ddy*dx) return false;
        }
        return true;
        
    }
};
