Nearly every one have used the Multiplication Table. But could you find out the k-th smallest number quickly from the multiplication table?

Given the height m and the length n of a m * n Multiplication Table, and a positive integer k, you need to return the k-th smallest number in this table.

Example 1:
Input: m = 3, n = 3, k = 5
Output: 
Explanation: 
The Multiplication Table:
1	2	3
2	4	6
3	6	9

The 5-th smallest number is 3 (1, 2, 2, 3, 3).
Example 2:
Input: m = 2, n = 3, k = 6
Output: 
Explanation: 
The Multiplication Table:
1	2	3
2	4	6

The 6-th smallest number is 6 (1, 2, 2, 3, 4, 6).
Note:
1. The m and n will be in the range [1, 30000].
2. The k will be in the range [1, m * n]

SOLUTION:

class Solution {
public:
    int pos(int mi,int m,int n){
        int ans=0;
        for(int i=1;i<=n;i++){
            ans+=min(m,mi/i);
        }
        return ans;
    }
    int findKthNumber(int m, int n, int k) {
        int l=1,r=m*n;
        while(l<r){
            int mid=l+(r-l)/2;
            int ele=pos(mid,m,n);
            if(ele>=k){
                r=mid;
            }
            else{
                l=mid+1;
            }
        }
        return r;
    }
};// min(m,mid/1)+min(m,mid/2)+min(m,mid/3);
// min(3,5)+min(3,2)+min(3,1)
// 3+2+1
